# Author: Andreas Koundouros [koundouros.andreas@gmail.com]
---
name: 'hank_without_end_labour_borr'
description: 'One-Asset HANK without Endogenous Labour Supply and Shockable Borrowing Wedge'
functions_file: 'hank_model_functions.py'

definitions: |
    from jax.numpy import log, maximum
    from econpizza.tools import percentile, jax_print
    
    amax = 60
    an = 60
    amin = -1
    rho_a = 0.3
    amin_terminal = -0.5
    a_grid, a_grid_n = create_grid(amax, an, amin, rho_a, amin_terminal)

variables: [ div, y, y_prod, w, pi, R, Rn, Rr, Rrminus, tax, C, n, B, lower_bound_a, MPC, D_o_Y, Rbar ] # Top10C, Top10A, Top1C, Top1A, Bot10A, Bot10C,
parameters: [ sigma_c, sigma_l, beta, z, theta, psi, phi_pi, phi_y, rho, rho_a, rho_Rbar, db ]
shocks: [ e_a, e_Rbar ]

distributions:
  dist:
    skills:
      type: exogenous_rouwenhorst
      rho: 0.97
      sigma: 0.6
      n: 8
    a: 
      type: endogenous_generic
      n: a_grid_n

decisions:
  inputs: [WaPrime]
  calls: |
    tfs = transfers(skills_stationary, div, tax, skills_grid)
    WaPrimeExp = skills_transition @ WaPrime
    Wa, a, c, mpc = egm_step(WaPrimeExp, a_grid, skills_grid, w, n, tfs, Rr, Rrminus, beta, sigma_c, sigma_l, db, lower_bound_a)
  outputs: [a,c,mpc]

aux_equations: |
    # Aggregation
    aggr_a = jnp.sum(dist*a, axis=(0,1)) # asset holdings
    aggr_c = jnp.sum(dist*c, axis=(0,1)) # consumption 
    aggr_mpc = jnp.sum(dist*mpc, axis=(0,1)) # MPC
    aggr_debt = -jnp.sum(jnp.where((a < 0), dist*a, 0), axis=(0,1)) # debt holdings
    
    # Calculate shares
    # top10a = 1 - percentile(a, dist, .9) # wealth share of top-10% 
    # top10c = 1 - percentile(c, dist, .9) # consumption share of top-10% 
    # top1a = 1 - percentile(a, dist, .99) # wealth share of top-1% 
    # top1c = 1 - percentile(c, dist, .99) # consumption share of top-1% 
    # bot10a = percentile(a, dist, .1) # wealth share of bottom-10% 
    # bot10c = percentile(c, dist, .1) # consumption share of bottom-10% 

equations:
    # Clearing and aggregation
    ~ B = aggr_a # bond market clearing
    ~ C = aggr_c # aggregate consumption
    ~ C + Rbar*aggr_debt = y # goods market clearing
    ~ MPC = aggr_mpc # aggregate MPC
    ~ D_o_Y = aggr_debt/y # household debt-to-GDP
    
    # Definitions
    # ~ Top10C = top10c
    # ~ Top10A = top10a
    # ~ Top1C = top1c
    # ~ Top1A = top1a
    # ~ Bot10C = bot10c
    # ~ Bot10A = bot10a

    # Firms
    ~ n = y_prod/z # production function
    ~ div = (1 - psi*(pi/piSS - 1)**2/2)*y_prod - w*n # dividends
    ~ y = (1 - psi*(pi/piSS - 1)**2/2)*y_prod # "effective" output
    ~ psi*(pi/piSS - 1)*pi/piSS = (1-theta) + theta*w + psi*piPrime/R*(piPrime/piSS - 1)*piPrime/piSS*y_prodPrime/y_prod # NKPC

    # Fiscal authority
    ~ Rr = RLag/pi # ex-post real return on positive bond holdings 
    ~ Rrminus = Rr + Rbar # ex-post real return on negative bond holdings
    ~ tax = (Rr-1)*B # balanced budget
    
    # Monetary authority
    ~ Rn = (RSS*((pi/piSS)**phi_pi)*((y/yLag)**phi_y))**(1-rho)*RnLag**rho # MP rule on shadow nominal rate
    ~ R = maximum(1, Rn) # ZLB

    # Clearing conditions
    ~ w = n**sigma_l # labour market clearing

    # Exogenous processes
    ~ lower_bound_a = lower_bound_aSS*(lower_bound_aLag/lower_bound_aSS)**rho_a*exp(e_a) # exogenous borrowing limit
    ~ Rbar = RbarSS*(RbarLag/RbarSS)**rho_Rbar*exp(e_Rbar)

steady_state:
    # Fixed steady state values
    fixed_values:
        # Parameters:
        beta: 0.97 # discount factor
        sigma_c: 2. # intertemporal elasticity of substitution
        sigma_l: 2. # inverse Frisch elasticity of labour supply
        theta: 10. # elasticity of substitution
        psi: 100. # parameter on the costs of price adjustment
        phi_pi: 1.5 # Taylor rule coefficient on inflation
        phi_y: 0.1 # Taylor rule coefficient on output
        rho: 0.8 # persistence in notional nominal interest rate
        rho_a: 0.3 # persistence of borrowing limit shock
        rho_Rbar: 0.3
        lower_bound_a: -1 # borrowing limit
        db: 0.025 # step size in MPC calculation

        # Variables
        pi: 1.0 # inflation
        B: 1.6 # government bond supply
        w: (theta-1)/theta # real wage (equal to marginal costs of the firm)
        n: w**(1/sigma_l) # labor supply
        div: 1 - w*n # dividends
        Rbar: 1e-8 # intermediation cost
    
    # Initial guesses for steady state
    init_guesses:
        z: 1.06 # technology
        R: 1.005 # steady state nominal rate
        Rr: R # steady state real rate on positive bond holdings 
        Rn: R # steady state notional nominal rate
        Rrminus: Rr + Rbar # steady state real rate on negative bond holdings
        tax: (Rr-1)*B # steady state taxes
        WaPrime: egm_init(a_grid, skills_stationary) # initialise marginal continuation value
        